import part4

g = part4.HeuristicGraph()
# Add nodes and edges to the graph
g.add_node(1)
g.add_node(2)
g.add_node(3)
g.add_node(4)
g.add_node(5)
g.add_node(6)
g.add_node(7)
g.add_node(8)
g.add_node(9)
g.add_node(10)
g.add_node(11)
g.add_node(12)
g.add_node(13)
g.add_edge(1, 13, 7)
g.add_edge(1, 2, 3)
g.add_edge(1, 4, 4)
g.add_edge(2, 13, 2)
g.add_edge(2, 1, 3)
g.add_edge(2, 4, 4)
g.add_edge(2, 8, 1)
g.add_edge(3, 13, 3)
g.add_edge(3, 12, 2)
g.add_edge(4, 1, 4)
g.add_edge(4, 2, 4)
g.add_edge(4, 6, 5)
g.add_edge(5, 7, 2)
g.add_edge(5, 11, 5)
g.add_edge(6, 4, 5)
g.add_edge(6, 8, 3)
g.add_edge(7, 8, 2)
g.add_edge(7, 5, 2)
g.add_edge(8, 2, 1)
g.add_edge(8, 6, 3)
g.add_edge(8, 7, 2)
g.add_edge(9, 12, 4)
g.add_edge(9, 10, 6)
g.add_edge(9, 11, 4)
g.add_edge(10, 12, 4)
g.add_edge(10, 9, 6)
g.add_edge(10, 11, 4)
g.add_edge(11, 9, 4)
g.add_edge(11, 10, 4)
g.add_edge(11, 5, 5)
g.add_edge(12, 3, 2)
g.add_edge(12, 9, 4)
g.add_edge(12, 10, 4)
g.add_edge(13, 1, 7)
g.add_edge(13, 2, 2)
g.add_edge(13, 3, 3)


# Set the graph and algorithm for ShortPathFinder
spfinder = part4.ShortPathFinder()
spfinder.set_graph(g)
# Put name of algorithm desired
spfinder.set_algorithm(part4.A_Star())
# Calculate the shortest path from node 1 to node 3
shortest_path = spfinder.calc_short_path(12, 5)
print("Shortest path:", shortest_path)
